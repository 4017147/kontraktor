- error/disconnect handling
    1. client remoteref facade stopped
    2. non-facadae remote ref stopped in client
    3. non-facadae published actor stopped
    4. facade published actor stopped
    5. sending to a dead remoteref
    6. receiving on unpublished actor

    need errorlistener ..

OK - komplexe setups: mehrere clients in 1 vm. mehrere server in 1 vm. weitergabe von remote refs an remote
- double publish
- add remove of objects (check stop in poll-loop)
OK - streaming callbacks ..
- interop: minbin/js
- interop: rest
- websocket transport
- sanity check required: clientside calls + getActor not possible with remoting
- not all methods should be public via webservice e.g. $stop() :-)
- meta actor